{"version":3,"sources":["helpers/Constants.js","api/Config.js","api/authUrl.js","api/messagesUrl.js","helpers/History.js","helpers/AuthHeader.js","actions/types.js","actions/index.js","components/menu/UserDataMenu.js","components/menu/Header.js","components/forms/SignInForm.js","components/public/SignIn.js","components/forms/SignUpForm.js","components/public/SignUp.js","components/public/NoFound.js","components/InternalServerError.js","components/protected/table/MessagesTable.js","components/protected/table/EmptyMessages.js","components/ScreenLoader.js","components/protected/inbox/RecivedMessages.js","components/protected/sent/sentMessages.js","components/forms/ComposeForm.js","components/protected/create/Compose.js","components/modal/Modal.js","components/public/Unauthorized.js","components/protected/MessagesSubMenu.js","components/AppGrid.js","components/menu/PrivateRoute.js","components/protected/message/MessageView.js","components/protected/message/ShowMessage.js","components/protected/delete/DeleteMessage.js","components/App.js","reducers/authReducer.js","reducers/messagesReducer.js","reducers/loaderReducer.js","reducers/serverErrorReducer.js","reducers/index.js","index.js"],"names":["PATH","PRODUCTION_SERVER","axios","create","baseURL","createBrowserHistory","authHeader","user","JSON","parse","localStorage","getItem","accessToken","headers","isAuth","dispatch","a","type","payload","emptyMessages","clearEmptyMessages","fetchMessage","id","messagesUrl","get","response","data","success","message","messageUserData","setTimeout","serverErrorActionCreator","cleareFailedShowMessage","errorType","error","UserDataMenu","full_name","email","Popup","trigger","Icon","name","flowing","hoverable","Grid","centered","Column","textAlign","as","Header","this","props","isLoggedIn","Fragment","Menu","Item","onClick","signOut","circular","Link","to","className","pointing","fluid","inverted","position","renderUserLinks","React","Component","connect","state","auth","removeItem","history","push","SignInForm","renderInput","input","label","meta","icon","Form","Input","iconPosition","placeholder","renderError","onSubmit","formValues","touched","Message","negative","handleSubmit","pristine","submitting","title","serverError","screen_loader_active","size","Segment","stacked","color","Field","component","Button","loading","disabled","reduxForm","form","validate","formValue","value","errors","test","undefined","password","SignIn","signIn","style","height","verticalAlign","maxWidth","renderSignInIfAuth","failed_signin_error","loader","authUrl","post","setItem","stringify","SignUpForm","SignUp","signUp","failed_signup_error","NoFound","InternalServerError","serverErrorMessage","dismiss","onDismiss","bottom","width","MessagesTable","textValue","e","setState","target","senderEmail","_","orderBy","messages","filter","toLowerCase","subject","includes","map","Table","Row","key","Cell","renderRecivedOrSent","variant","tableHeader","length","onChange","handelChange","celled","striped","HeaderCell","colSpan","Body","renderTable","EmptyMessages","content","actions","Inline","ScreenLoader","active","Dimmer","Loader","RecivedMessages","fetachReciveMessages","empty_messages","renderActions","renderEmptyOrTable","Object","values","recived","internalServerError","sentMessages","fetachSentMessages","sent","ComposeForm","renderText","control","TextArea","renderSelectField","children","header","required","users","option","Compose","createMessage","fetchUsers","alert","serverFormat","reciver","parseInt","CustomeModal","closeModalPath","ReactDOM","createPortal","Modal","closeIcon","open","onClose","Content","Actions","document","querySelector","Unauthorized","MessagesSubMenu","path","vertical","AppGrid","stackable","padded","PrivateRoute","rest","render","MessageView","Group","ShowMessage","match","params","failed_show_message","mail","sender","userId","renderMessageView","s_message","extra_s_message","DeleteMessage","currentUserId","messageToDelete","deleteMessage","renderModal","delete","App","cleanServerError","serverErrorCleanUp","Container","exact","errorMessage","INITIAL_STATE","isLoading","combineReducers","action","formReducer","mapKeys","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk"],"mappings":"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","file":"static/js/main.aa00adb2.chunk.js","sourcesContent":["export const PATH = {\r\n    SIGN_IN:\"/\",\r\n    SIGN_UP:\"/signup\",\r\n    INBOX:\"/inbox\",\r\n    SENT:\"/inbox/sent\",\r\n    SHOW_MESSAGE:\"/inbox/:id\",\r\n    DELETE_MESSAGE:\"/inbox/delete/:id\",\r\n    COMPOSE:\"/compose\"\r\n}\r\n\r\n","export const DEVELOPMENT_SERVER = {\r\n    AUTH_URL:\"http://localhost:3001/auth\",\r\n    MESSAGES_URL:\"http://localhost:3001/messages\"\r\n}\r\n\r\nexport const PRODUCTION_SERVER = {\r\n    AUTH_URL:\"/auth\",\r\n    MESSAGES_URL:\"/messages\"\r\n}","import axios from 'axios';\r\nimport {PRODUCTION_SERVER} from './Config';\r\n\r\nexport default axios.create({\r\n    baseURL:PRODUCTION_SERVER.AUTH_URL\r\n})","import axios from 'axios';\r\nimport {PRODUCTION_SERVER} from './Config';\r\n\r\nexport default axios.create({\r\n    baseURL:PRODUCTION_SERVER.MESSAGES_URL\r\n})","import { createBrowserHistory } from 'history'; \r\nexport default createBrowserHistory();","export default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (user && user.accessToken) {\r\n      const config = {\r\n        headers: {\r\n          'x-access-token': user.accessToken,\r\n          'Content-Type' : 'application/json'\r\n        }\r\n      }\r\n      return config;\r\n    } else {\r\n      return {};\r\n    }\r\n  }","export const SIGN_IN='SIGN_IN';\r\nexport const SIGN_OUT='SIGN_OUT';\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const FETCH_RECIVEMESSAGES = \"FETCH_RECIVEMESSAGES\";\r\nexport const FETCH_SENTMESSAGES = \"FETCH_SENTMESSAGES\";\r\nexport const FETCH_MESSAGE= \"FETCH_MESSAGE\";\r\nexport const FETCH_USERS=\"FETCH_USERS\";\r\nexport const CREATE_MESSAGE=\"CREATE_MESSAGE\";\r\nexport const FAILED_SIGNIN = \"FAILED_SIGNIN\";\r\nexport const DELETE_MESSAGE = \"DELETE_MESSAGE\";\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\r\nexport const FAILED_SIGNUP= \"FAILED_SIGNUP\";\r\nexport const EMPTY_MESSAGES= \"EMPTY_MESSAGES\";\r\nexport const CLEAR_EMPTY=\"CLEAR_EMPTY\";\r\nexport const FAILEDSHOW_MESSAGE=\"FAILEDSHOW_MESSAGE\";\r\nexport const CLEAR_FAILEDSHOW_MESSAGE=\"CLEAR_FAILEDSHOW_MESSAGE\";\r\nexport const ACTIVE_SCREENLOADER = \"ACTIVE_SCREENLOADER\";\r\nexport const DISABLE_SCREENLOADER = \"DISABLE_SCREENLOADER\";\r\nexport const SERVER_ERROR_SHOW = \"SERVER_ERROR_SHOW\";\r\nexport const SERVER_ERROR_CLEAN = \"SERVER_ERROR_CLEAN\";\r\n","import authUrl from '../api/authUrl';\r\nimport messagesUrl from '../api/messagesUrl';\r\nimport history from '../helpers/History';\r\nimport authHeader from '../helpers/AuthHeader';\r\nimport {\r\n    SIGN_IN,\r\n    SIGN_OUT,\r\n    USER_LOADED,\r\n    FETCH_RECIVEMESSAGES,\r\n    FETCH_SENTMESSAGES,\r\n    FETCH_MESSAGE,\r\n    FETCH_USERS,\r\n    CREATE_MESSAGE,\r\n    FAILED_SIGNIN,\r\n    DELETE_MESSAGE,\r\n    CLEAR_ERROR,\r\n    FAILED_SIGNUP,\r\n    EMPTY_MESSAGES,\r\n    CLEAR_EMPTY,\r\n    FAILEDSHOW_MESSAGE,\r\n    CLEAR_FAILEDSHOW_MESSAGE,\r\n    ACTIVE_SCREENLOADER,\r\n    DISABLE_SCREENLOADER,\r\n    SERVER_ERROR_SHOW,\r\n    SERVER_ERROR_CLEAN\r\n    } from './types';\r\n\r\nimport {PATH} from '../helpers/Constants';\r\n\r\n\r\nexport const signIn = (formValues) => async (dispatch) =>{\r\n    dispatch({type:ACTIVE_SCREENLOADER, payload:{}})\r\n    try{\r\n        const response = await authUrl.post('/login',{...formValues});\r\n        if(!response.data.success){\r\n            dispatch({type:FAILED_SIGNIN,payload:response.data.error})\r\n            dispatch({type:DISABLE_SCREENLOADER, payload:{}})\r\n            return setTimeout(() => {\r\n                return dispatch({type:CLEAR_ERROR,payload:{}})\r\n            }, 4000);\r\n        }\r\n\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        dispatch({type:SIGN_IN,payload:response.data});\r\n        dispatch({type:DISABLE_SCREENLOADER, payload:{}})\r\n        history.push(PATH.INBOX);\r\n    }catch(error){\r\n        dispatch({type:FAILED_SIGNIN,payload:error.message})\r\n        dispatch({type:DISABLE_SCREENLOADER, payload:{}})\r\n            return setTimeout(() => {\r\n                    return dispatch({type:CLEAR_ERROR,payload:{}})\r\n            }, 4000);\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const signUp = (formValues) => async (dispatch) =>{\r\n    dispatch({type:ACTIVE_SCREENLOADER, payload:{}})\r\n    try{\r\n        const response = await authUrl.post('/register',{...formValues});\r\n        if(!response.data.success){\r\n            dispatch({type:FAILED_SIGNUP,payload:response.data.error});\r\n            dispatch({type:DISABLE_SCREENLOADER, payload:{}})\r\n            return setTimeout(() => {\r\n                return dispatch({type:CLEAR_ERROR,payload:response.data.error})\r\n            }, 4000);\r\n        }\r\n        dispatch({type:DISABLE_SCREENLOADER, payload:{}})\r\n        history.push(PATH.SIGN_IN);\r\n    }catch(error){\r\n        dispatch({type:FAILED_SIGNUP,payload:error.message})\r\n        dispatch({type:DISABLE_SCREENLOADER, payload:{}})\r\n            return setTimeout(() => {\r\n                    dispatch({type:CLEAR_ERROR,payload:{}})\r\n            }, 4000);\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const signOut = () => async (dispatch) =>{\r\n    localStorage.removeItem(\"user\");\r\n    dispatch({type:SIGN_OUT,payload:{}});\r\n    history.push(PATH.SIGN_IN);\r\n}\r\n\r\nexport const isAuth =() => async (dispatch) => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if(!user){\r\n        dispatch({type:USER_LOADED,payload:{}})\r\n    }\r\n    dispatch({type:USER_LOADED,payload:{...user}})\r\n}\r\n\r\nexport const fetachReciveMessages = () => async (dispatch)=> {\r\n    try{\r\n        dispatch({type:ACTIVE_SCREENLOADER, payload:{}})\r\n        const response = await messagesUrl.get(\"/message\",authHeader());\r\n        if(response.data){\r\n            dispatch({type: FETCH_RECIVEMESSAGES, payload:response.data.response})\r\n            if(response.data.response.length === 0) dispatch(emptyMessages())\r\n            setTimeout(()=>{\r\n                dispatch({type:DISABLE_SCREENLOADER, payload:{}})\r\n            },200)\r\n        }\r\n    }catch(error){\r\n        dispatch({type:DISABLE_SCREENLOADER, payload:{}});\r\n        dispatch(serverErrorActionCreator(SERVER_ERROR_SHOW,error.message));\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport const fetachSentMessages = () => async (dispatch)=> {\r\n    try{\r\n        dispatch({type:ACTIVE_SCREENLOADER, payload:{}})\r\n        const response = await messagesUrl.get(\"/message/?filter=sent\",authHeader());\r\n        \r\n        if(response.data){\r\n            dispatch({type: FETCH_SENTMESSAGES, payload:response.data.response})\r\n            if(response.data.response.length === 0) dispatch(emptyMessages())\r\n            setTimeout(()=>{\r\n                dispatch({type:DISABLE_SCREENLOADER, payload:{}})\r\n            },200)\r\n        }   \r\n    }catch(error){\r\n        dispatch({type:DISABLE_SCREENLOADER, payload:{}});\r\n        dispatch(serverErrorActionCreator(SERVER_ERROR_SHOW,error.message));\r\n    }\r\n}\r\n\r\nexport const emptyMessages = () => (dispatch) =>{\r\n    dispatch({type:EMPTY_MESSAGES})\r\n}\r\n\r\n\r\nexport const clearEmptyMessages = () => dispatch =>{\r\n    dispatch({type:CLEAR_EMPTY})\r\n}\r\n\r\nexport const fetchMessage = (id) => async (dispatch)=>{\r\n    try{\r\n        dispatch({type:ACTIVE_SCREENLOADER, payload:{}})\r\n        const response = await messagesUrl.get(`/message/${id}`,authHeader());\r\n        if(response.data.success){\r\n            dispatch({type:FETCH_MESSAGE,payload:{message:response.data.message,messageUserData:response.data.messageUserData}})\r\n            setTimeout(()=>{\r\n                dispatch({type:DISABLE_SCREENLOADER, payload:{}})\r\n            },200)\r\n        }else{\r\n            dispatch({type:FAILEDSHOW_MESSAGE,payload:response.data})\r\n            setTimeout(()=>{\r\n                dispatch({type:DISABLE_SCREENLOADER, payload:{}})\r\n            },200)\r\n        }\r\n    }catch(error){\r\n        dispatch({type:DISABLE_SCREENLOADER, payload:{}});\r\n        dispatch(serverErrorActionCreator(SERVER_ERROR_SHOW,error.message));\r\n    }\r\n}\r\n\r\nexport const cleareFailedShowMessage = () => dispatch =>{\r\n    dispatch({type:CLEAR_FAILEDSHOW_MESSAGE})\r\n}\r\n\r\nexport const fetchUsers = () => async (dispatch) =>{\r\n    try{\r\n        dispatch({type:ACTIVE_SCREENLOADER, payload:{}})\r\n        const response = await messagesUrl.get('/users',authHeader());\r\n        if(response.data.success){\r\n            dispatch({type:FETCH_USERS,payload:response.data.response});\r\n            setTimeout(()=>{\r\n                dispatch({type:DISABLE_SCREENLOADER, payload:{}})\r\n            },100)\r\n        }else{\r\n            alert(response.data.error)\r\n            setTimeout(()=>{\r\n                dispatch({type:DISABLE_SCREENLOADER, payload:{}})\r\n            },100)\r\n        }\r\n    }catch(error){\r\n        dispatch({type:DISABLE_SCREENLOADER, payload:{}});\r\n        dispatch(serverErrorActionCreator(SERVER_ERROR_SHOW,error.message));\r\n    }\r\n}\r\n\r\nexport const createMessage = (formValues) => async (dispatch) =>{\r\n\r\n    const serverFormat = {\r\n        reciver:parseInt(formValues.reciver),\r\n        message:formValues.message,\r\n        subject:formValues.subject\r\n    }\r\n    const response = await messagesUrl.post('/message',{...serverFormat},authHeader());\r\n\r\n    if(response.data.success){\r\n        dispatch({type:CREATE_MESSAGE,payload:response.data.response});\r\n        history.push(PATH.SENT);\r\n    }else{\r\n        history.push(PATH.SENT);\r\n        dispatch(serverErrorActionCreator(SERVER_ERROR_SHOW,response.data.message));\r\n    }\r\n}\r\n\r\n\r\nexport const deleteMessage = (id,currentUserId,sender) => async (dispatch) =>{\r\n    const response = await messagesUrl.delete(`/message/${id}`,authHeader());\r\n    if(response.data.success){\r\n        dispatch({type:DELETE_MESSAGE,payload:id})\r\n        if(currentUserId === sender){\r\n            return history.push(PATH.SENT)\r\n        }\r\n        history.push(PATH.INBOX);\r\n    }else{\r\n        history.push(PATH.INBOX);\r\n        dispatch(serverErrorActionCreator(SERVER_ERROR_SHOW,response.data.error));\r\n    }\r\n}\r\n\r\nexport const serverErrorActionCreator = (errorType, error) =>{\r\n    return {\r\n        type: errorType,\r\n        payload:error,\r\n        error:true\r\n    }\r\n}\r\n\r\nexport const serverErrorCleanUp = () => (dispatch)=>{\r\n    return dispatch({type:SERVER_ERROR_CLEAN,payload:{}});\r\n}","import React from 'react'\r\nimport { Header, Popup, Grid , Icon} from 'semantic-ui-react'\r\n\r\nconst UserDataMenu = ({full_name,email}) => {\r\n\r\n  return (\r\n    <Popup trigger={<Icon name='user' />} flowing hoverable>\r\n      <Grid centered>\r\n        <Grid.Column textAlign='center'>\r\n        <Header as='h4'>Hello: {full_name}</Header>\r\n          <p>\r\n            {email}\r\n          </p>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Popup>\r\n  )\r\n}  \r\n\r\n\r\nexport default UserDataMenu;\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Menu,Icon} from \"semantic-ui-react\";\r\nimport {connect} from 'react-redux';\r\nimport {isAuth,signOut} from '../../actions';\r\nimport {PATH} from '../../helpers/Constants';\r\nimport UserDataMenu from './UserDataMenu';\r\n\r\nclass Header extends React.Component{\r\n\r\n    componentDidMount(){\r\n        this.props.isAuth();\r\n    }\r\n\r\n    renderUserLinks(){\r\n        const {full_name,isLoggedIn, email} = this.props;\r\n        \r\n        if(isLoggedIn){\r\n            return(\r\n                <React.Fragment>\r\n                    <Menu.Item >\r\n                        <UserDataMenu full_name={full_name} email={email}/>\r\n                    </Menu.Item> \r\n                    <Menu.Item onClick={()=>this.props.signOut()}>\r\n                        <Icon name='sign out alternate' circular />\r\n                        Sign Out\r\n                    </Menu.Item>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Menu.Item as={Link} to={PATH.SIGN_IN} className=\"nav-link\">Sign In</Menu.Item>\r\n                <Menu.Item as={Link} to={PATH.SIGN_UP} className=\"nav-link\">Sign Up</Menu.Item>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    \r\n\r\n    render(){\r\n        const {isLoggedIn} = this.props;\r\n        return(\r\n            <Menu pointing fluid inverted>\r\n                {isLoggedIn ? <Menu.Item  as={Link} to={PATH.INBOX}>Home</Menu.Item>:\r\n                <Menu.Item as={Link} to={PATH.SIGN_IN}>Messaging Sys</Menu.Item>}\r\n                <Menu.Menu position=\"right\" id=\"sys-navbar\">\r\n                    {this.renderUserLinks()}\r\n                </Menu.Menu>\r\n            </Menu>\r\n            )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {isLoggedIn:state.auth.isLoggedIn,full_name: state.auth.full_name ,email: state.auth.email}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,{isAuth,signOut})(Header);","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { Button, Form, Header, Message, Segment } from 'semantic-ui-react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass SignInForm extends React.Component{\r\n\r\n    renderError({error,touched}){\r\n        if(touched && error){\r\n            return(\r\n                <Message negative>\r\n                    <p>{error}</p>\r\n                </Message>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderInput = ({input,label, meta,type,icon}) =>{\r\n        return (\r\n            <React.Fragment>\r\n                <Form.Input fluid icon={icon} iconPosition='left' placeholder={label} {...input} type={type} />\r\n                {this.renderError(meta)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    onSubmit =(formValues) =>{\r\n        this.props.onSubmit(formValues);\r\n    }\r\n\r\n    render(){\r\n        const {handleSubmit, pristine, submitting,title,serverError,screen_loader_active} = this.props;\r\n        return(\r\n            <Form size='large' onSubmit={handleSubmit(this.onSubmit)}>\r\n                <Segment stacked>\r\n                    <Header as='h2' color='teal' textAlign='center'>\r\n                         {title}\r\n                    </Header>\r\n                    <Field icon='mail' name=\"email\" type=\"text\" component={this.renderInput} label=\"Enter Email\"/>\r\n                    <Field icon='lock' name=\"password\"  type=\"password\" component={this.renderInput} label=\"Enter Password\"/>\r\n                    <Button loading={screen_loader_active} color='teal' fluid size='large' type=\"submit\" disabled={pristine || submitting}>\r\n                        Sign In\r\n                    </Button>\r\n                    {serverError && (\r\n                        <Message negative>{serverError}</Message>\r\n                    )}\r\n                    <Message>\r\n                        New to us? <Link to=\"/signup\">Sign Up</Link>\r\n                    </Message>\r\n                </Segment>                \r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n  const validate= (formValue) =>{\r\n    const errors={};\r\n\r\n    if(formValue.email){\r\n        const email = value => value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\r\n        'Invalid email address' : undefined;\r\n        errors.email = email(formValue.email)\r\n    }\r\n\r\n    if(!formValue.email){\r\n        errors.email = 'You must enter an Email'\r\n    }\r\n\r\n    if(!formValue.password){\r\n        errors.password = 'You must enter a Password'\r\n    }\r\n\r\n\r\n    return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n    form:'signIn',\r\n    validate\r\n})(SignInForm);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {signIn} from '../../actions'\r\nimport {Redirect} from 'react-router-dom';\r\nimport SignInForm from '../forms/SignInForm'\r\nimport {Grid} from 'semantic-ui-react';\r\n\r\nclass SignIn extends React.Component{\r\n\r\n    onSubmit = (formValues)=>{\r\n        this.props.signIn(formValues)\r\n    }\r\n\r\n\r\n    renderSignInIfAuth(){\r\n        if(!this.props.isLoggedIn){\r\n            return(\r\n                <Grid textAlign='center' style={{ height: '90vh' }} verticalAlign='middle'>\r\n                    <Grid.Column style={{ maxWidth: 450 }}>\r\n                            <SignInForm screen_loader_active={this.props.screen_loader_active} serverError={this.props.serverError} title='Sign In' onSubmit={this.onSubmit}/>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            )\r\n        }\r\n        return(<Redirect to=\"/inbox\"/>)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                {this.renderSignInIfAuth()}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {isLoggedIn:state.auth.isLoggedIn,serverError:state.auth.failed_signin_error,screen_loader_active:state.loader.screen_loader_active}\r\n}\r\n\r\nexport default connect(mapStateToProps,{signIn})(SignIn);","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { Button, Form, Header, Message, Segment } from 'semantic-ui-react'\r\n\r\n\r\nclass SignUpForm extends React.Component{\r\n\r\n    renderError({error,touched}){\r\n        if(touched && error){\r\n            return(\r\n                <Message negative>\r\n                    <p>{error}</p>\r\n                </Message>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderInput = ({input,label, meta,type,icon}) =>{\r\n        return (\r\n            <React.Fragment>\r\n                <Form.Input fluid icon={icon} iconPosition='left' placeholder={label} {...input} type={type} />\r\n                {this.renderError(meta)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    onSubmit =(formValues) =>{\r\n        this.props.onSubmit(formValues);\r\n    }\r\n\r\n\r\n    render(){\r\n        const {handleSubmit, pristine, submitting,title,serverError,screen_loader_active} = this.props;\r\n        return(\r\n            <Form size='large' onSubmit={handleSubmit(this.onSubmit)}>\r\n                <Segment stacked>\r\n                    <Header as='h2' color='teal' textAlign='center'>\r\n                         {title}\r\n                    </Header>\r\n                    <Field icon='mail' name=\"email\" type=\"text\" component={this.renderInput} label=\"Enter Email\"/>\r\n                    <Field icon='lock' name=\"password\"  type=\"password\" component={this.renderInput} label=\"Enter Password\"/>\r\n                    <Field icon='user' name=\"full_name\" type=\"text\" component={this.renderInput} label=\"Enter A Full Name\"/>\r\n                    {serverError && (\r\n                        <Message negative>{serverError}</Message>\r\n                    )}\r\n                    <Button loading={screen_loader_active} color='teal' fluid size='large' type=\"submit\" disabled={pristine || submitting}>\r\n                        Sign Up\r\n                    </Button>\r\n                </Segment>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate= (formValue) =>{\r\n    const errors={};\r\n\r\n    if(formValue.email){\r\n        const email = value => value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\r\n        'Invalid email address' : undefined;\r\n        errors.email = email(formValue.email)\r\n    }\r\n\r\n    if(!formValue.email){\r\n        errors.email = 'You must enter an Email'\r\n    }\r\n\r\n    if(!formValue.password){\r\n        errors.password = 'You must enter a Password'\r\n    }\r\n\r\n    if(!formValue.full_name){\r\n        errors.full_name = \"You must enter a Full Name\"\r\n    }\r\n\r\n\r\n    return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n    form:'singUp',\r\n    validate\r\n})(SignUpForm);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {signUp} from '../../actions';\r\nimport {Redirect} from 'react-router-dom';\r\nimport SignUpForm from '../forms/SignUpForm';\r\nimport {Grid} from 'semantic-ui-react';\r\n\r\nclass SignUp extends React.Component{\r\n\r\n\r\n\r\n    onSubmit = (formValues)=>{\r\n        this.props.signUp(formValues)\r\n    }\r\n\r\n\r\n    renderSignInIfAuth(){\r\n        if(!this.props.isLoggedIn){\r\n            return(\r\n                    <Grid textAlign='center' style={{ height: '90vh' }} verticalAlign='middle'>\r\n                        <Grid.Column style={{ maxWidth: 450 }}>\r\n                            <SignUpForm validate={this.validate} screen_loader_active={this.props.screen_loader_active} serverError={this.props.serverError} title='Sign Up' onSubmit={this.onSubmit} />\r\n                        </Grid.Column>\r\n                    </Grid>\r\n            )\r\n        }\r\n        return(<Redirect to=\"/inbox\"/>)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                {this.renderSignInIfAuth()}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {isLoggedIn:state.auth.isLoggedIn ,serverError:state.auth.failed_signup_error, screen_loader_active:state.loader.screen_loader_active}\r\n}\r\n\r\nexport default connect(mapStateToProps,{signUp})(SignUp);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\r\n\r\nimport {PATH} from '../../helpers/Constants';\r\n\r\nconst NoFound = () => {\r\n    \r\n    return (\r\n            <Segment placeholder>\r\n                <Header icon>\r\n                <Icon name='exclamation' />\r\n                    Ops... we couldn't find the page you're looking for\r\n                </Header>\r\n                <Button as={Link} to={PATH.SIGN_IN} color=\"blue\">Back Home</Button>\r\n            </Segment>     \r\n    )\r\n}\r\n\r\nexport default NoFound;","import React from 'react';\r\nimport {Message} from 'semantic-ui-react';\r\n\r\nconst InternalServerError = ({serverErrorMessage,dismiss}) =>{\r\n    \r\n    return (\r\n        <Message negative onDismiss={()=>dismiss()} style={{position:'fixed', bottom:0, width:'100%'}}>\r\n            <Message.Header>{serverErrorMessage}</Message.Header>\r\n            <p>Please try again later</p>\r\n        </Message>\r\n    )\r\n}\r\n\r\nexport default InternalServerError;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport { Table , Button, Segment ,Input} from 'semantic-ui-react'\r\n\r\nclass MessagesTable extends React.Component{\r\n\r\n    state = {\r\n        textValue:''\r\n    };\r\n\r\n\r\n    handelChange(e){\r\n        this.setState({textValue:e.target.value})\r\n\r\n    }\r\n\r\n\r\n    renderRecivedOrSent(message){\r\n        switch(this.props.type){\r\n            case \"recived\":\r\n                return `${message.user.email}`;\r\n            case \"sent\":\r\n                return `${message.senderEmail}`;\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    renderTable(){\r\n        const {textValue} = this.state;\r\n        let orderBy = _.orderBy(this.props.messages, ['id'],['desc']);\r\n        \r\n        return orderBy.filter(message=>{\r\n            if (textValue.toLowerCase() === '') return true\r\n            if  (message.subject.includes(textValue.toLowerCase()) || message.message.includes(textValue.toLowerCase()) ){\r\n                return true\r\n            }\r\n        }).map((message)=>{\r\n            return(\r\n                <Table.Row key={message.id}>\r\n                    <Table.Cell width={3}>{this.renderRecivedOrSent(message)}</Table.Cell>\r\n                    <Table.Cell><Link to={`/inbox/${message.id}`}> {message.subject} - {message.message}</Link></Table.Cell>\r\n                    <Table.Cell width={2} textAlign='center'><Button variant=\"secondary\" as={Link} to={`/inbox/delete/${message.id}`}>Delete</Button></Table.Cell>\r\n                </Table.Row>\r\n            )\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const {tableHeader,messages} = this.props;\r\n        return(\r\n            <Segment>\r\n                {messages.length <= 1 ? null : <Input onChange={(e)=>this.handelChange(e)} icon='search' iconPosition='left' placeholder='Search...' />}\r\n                <Table celled striped >\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell colSpan='3'>{tableHeader}</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>{this.props.type === 'recived' ? 'From' : 'To'}</Table.HeaderCell>\r\n                            <Table.HeaderCell>Subject and Content</Table.HeaderCell>\r\n                            <Table.HeaderCell></Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {this.renderTable()}\r\n                    </Table.Body>\r\n                </Table>\r\n            </Segment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessagesTable;","import React from 'react'\r\nimport { Header, Icon, Segment } from 'semantic-ui-react';\r\n\r\nconst EmptyMessages = ({icon,content,actions}) => (\r\n  <Segment placeholder>\r\n    <Header icon>\r\n      <Icon name={icon} />\r\n      {content}\r\n    </Header>\r\n    <Segment.Inline>\r\n      {actions}\r\n    </Segment.Inline>\r\n  </Segment>\r\n)\r\n\r\nexport default EmptyMessages;","import React  from 'react';\r\nimport { Loader ,Dimmer} from 'semantic-ui-react';\r\n\r\nconst ScreenLoader = ({active}) =>{\r\n    return (\r\n        <Dimmer active={active} inverted>\r\n            <Loader />\r\n        </Dimmer>\r\n    )\r\n}\r\n\r\nexport default ScreenLoader;","import React from 'react'; \r\nimport {connect} from 'react-redux';\r\nimport {fetachReciveMessages,clearEmptyMessages} from '../../../actions';\r\nimport MessagesTable from '../table/MessagesTable';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {Link} from 'react-router-dom';\r\nimport EmptyComponent from '../table/EmptyMessages';\r\nimport ScreenLoader from '../../ScreenLoader';\r\n\r\nimport {PATH} from '../../../helpers/Constants';\r\n\r\nclass RecivedMessages extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetachReciveMessages();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const {empty_messages} = this.props;\r\n        if(empty_messages) this.props.clearEmptyMessages()\r\n    }\r\n\r\n\r\n    renderActions(){\r\n        return (\r\n                <Button as={Link} to={PATH.COMPOSE}>Compose</Button>\r\n        )\r\n    }\r\n\r\n    renderEmptyOrTable(){\r\n        const {screen_loader_active,empty_messages,messages,serverError} = this.props;\r\n        if(screen_loader_active){\r\n            return null\r\n        }\r\n        if(empty_messages || serverError){\r\n           return <EmptyComponent icon='inbox' content=\"You don't have any messages in the inbox\" actions={this.renderActions()}/>\r\n        }\r\n        return(\r\n            <MessagesTable  tableHeader=\"Inbox\" type=\"recived\" messages={messages} />\r\n        )\r\n    }\r\n\r\n    render(){\r\n        const {screen_loader_active} = this.props;\r\n        return (\r\n            <>\r\n                <ScreenLoader active={screen_loader_active}/>\r\n                {this.renderEmptyOrTable()}\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {messages:Object.values(state.messages.recived),\r\n        empty_messages:state.messages.empty_messages, \r\n        screen_loader_active:state.loader.screen_loader_active,\r\n        serverError:state.internalServerError.error\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{fetachReciveMessages,clearEmptyMessages})(RecivedMessages);","import React from 'react'; \r\nimport {connect} from 'react-redux';\r\nimport {fetachSentMessages,clearEmptyMessages} from '../../../actions';\r\nimport MessagesTable from '../table/MessagesTable';\r\nimport {Button} from 'semantic-ui-react';\r\nimport {Link} from 'react-router-dom';\r\nimport EmptyComponent from '../table/EmptyMessages';\r\nimport ScreenLoader from '../../ScreenLoader';\r\n\r\nimport {PATH} from '../../../helpers/Constants';\r\n\r\nclass sentMessages extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetachSentMessages();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const {empty_messages} = this.props;\r\n        if(empty_messages) this.props.clearEmptyMessages()\r\n    }\r\n\r\n    renderActions(){\r\n        return (\r\n                <Button as={Link} to={PATH.COMPOSE}>Compose</Button>\r\n        )\r\n    }\r\n\r\n    renderEmptyOrTable(){\r\n        const {screen_loader_active,empty_messages,messages ,serverError} = this.props;\r\n        if(screen_loader_active){\r\n            return null\r\n        }\r\n        if(empty_messages || serverError){\r\n           return <EmptyComponent icon='send' content=\"You don't have any sent messages\" actions={this.renderActions()}/>\r\n        }\r\n        return(\r\n            <MessagesTable tableHeader=\"Sent\" type=\"sent\" messages={messages} />\r\n        )\r\n    }\r\n\r\n    render(){\r\n        const {screen_loader_active} = this.props;\r\n        return (\r\n            <>\r\n                <ScreenLoader active={screen_loader_active}/>\r\n                {this.renderEmptyOrTable()}\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {messages:Object.values(state.messages.sent),\r\n        empty_messages:state.messages.empty_messages,\r\n        screen_loader_active:state.loader.screen_loader_active,\r\n        serverError:state.internalServerError.error\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{fetachSentMessages,clearEmptyMessages})(sentMessages);","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { Button, Form, Header, Message, Segment, TextArea} from 'semantic-ui-react';\r\n\r\nclass ComposeForm extends React.Component{\r\n\r\n    renderError({error,touched}){\r\n        if(touched && error){\r\n            return(\r\n                <Message negative>\r\n                    <p>{error}</p>\r\n                </Message>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderText = ({input,label,type,meta,icon}) =>{\r\n        if(type === 'text'){\r\n            return (\r\n                <React.Fragment>\r\n                    <Form.Input  placeholder={label} {...input} type={type} />\r\n                    {this.renderError(meta)}\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                    <Form.Input control={TextArea} placeholder={label} {...input} type={type} />\r\n                    {this.renderError(meta)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    renderSelectField = ({ input, label, type, meta, children }) =>{\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <Form.Field  {...input} control='select' >\r\n                    <option></option>\r\n                    {children}\r\n                </Form.Field>\r\n                {this.renderError(meta)}\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n\r\n    onSubmit =(formValues) =>{\r\n        this.props.onSubmit(formValues);\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const {handleSubmit, pristine, submitting,error,header,screen_loader_active} = this.props;\r\n        return(\r\n            <Form size='big' onSubmit={handleSubmit(this.onSubmit)} loading={screen_loader_active} >\r\n                <Segment stacked>\r\n                    <Header as='h2' color='grey' textAlign='center'>\r\n                         {header}\r\n                    </Header>\r\n                    <Field name=\"reciver\" validate={required} type=\"select\"  component={this.renderSelectField}>\r\n                        {this.props.users.map(option =>{\r\n                            return(\r\n                                <option key={option.id} value={option.id}>{option.email}</option>\r\n                            )\r\n                        })}\r\n                    </Field>\r\n                    <Field name=\"subject\" validate={required} type=\"text\" component={this.renderText} label=\"Enter Subject\"/>\r\n                    <Field name=\"message\" validate={required} type=\"text-area\" component={this.renderText} label=\"Enter Message\"/>\r\n                    {error && <strong>{error}</strong>}\r\n                    <Button color='blue' disabled={pristine || submitting}>\r\n                        Compose\r\n                    </Button>\r\n                </Segment>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nconst required = value => value ? undefined : 'Required';\r\n\r\nexport default reduxForm({\r\n    form:'compose'\r\n})(ComposeForm);","import React from 'react'; \r\nimport {connect} from 'react-redux';\r\nimport {fetchUsers,createMessage} from '../../../actions';\r\nimport ComposeForm from '../../forms/ComposeForm';\r\nimport {Grid} from 'semantic-ui-react';\r\n\r\nclass Compose extends React.Component {\r\n    \r\n    componentDidMount(){\r\n        this.props.fetchUsers()\r\n    }\r\n\r\n    onSubmit =(formValues) =>{\r\n        this.props.createMessage(formValues);\r\n    }\r\n\r\n    render(){\r\n        const {screen_loader_active} = this.props;\r\n        return (\r\n        <Grid textAlign='center' style={{ height: '70vh' }} verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 550 }}>\r\n                <ComposeForm screen_loader_active={screen_loader_active} header='Compose' onSubmit={this.onSubmit} users={this.props.users} />\r\n            </Grid.Column>\r\n        </Grid >\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {users:Object.values(state.messages.users),screen_loader_active:state.loader.screen_loader_active}\r\n}\r\n\r\nexport default connect(mapStateToProps,{fetchUsers,createMessage})(Compose);","import React  from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport history from '../../helpers/History';\r\nimport { Header, Modal} from 'semantic-ui-react';\r\n\r\nconst CustomeModal = ({title,actions,content,closeModalPath,icon}) =>{\r\n    \r\n    return ReactDOM.createPortal(\r\n            <Modal\r\n            closeIcon\r\n            open={true}\r\n            centered={true}\r\n            onClose={()=>history.push(closeModalPath)}\r\n            >\r\n                <Header icon={icon} content={title} />\r\n                <Modal.Content>\r\n                    <p>\r\n                    {content}\r\n                    </p>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    {actions}\r\n                </Modal.Actions>\r\n            </Modal>\r\n        \r\n      ,document.querySelector('#modal')\r\n    )\r\n}\r\n\r\nexport default CustomeModal;","import React from 'react';\r\nimport CustomeModal from '../modal/Modal';\r\nimport {Button} from 'semantic-ui-react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {PATH} from '../../helpers/Constants';\r\n\r\nconst Unauthorized = () =>{\r\n    \r\n    return(\r\n        <CustomeModal \r\n        closeModalPath={PATH.SIGN_IN} \r\n        title=\"You Unauthorized\"\r\n        icon=\"lock\"\r\n        content=\"Please Sign In Before!\"\r\n        actions={<Button as={Link} to={PATH.SIGN_IN} color=\"blue\">SignIn</Button>}/>\r\n    )\r\n}\r\n\r\nexport default Unauthorized;","import React from 'react';\r\nimport {Menu,Icon} from 'semantic-ui-react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {PATH} from '../../helpers/Constants';\r\n\r\nclass MessagesSubMenu extends React.Component {\r\n\r\n  render() {\r\n    const {path} = this.props\r\n    return (\r\n      <Menu fluid vertical >\r\n        <Menu.Item\r\n          name='inbox'\r\n          active={path === PATH.INBOX}\r\n          as={Link} to={PATH.INBOX}\r\n        >\r\n        <Icon name='mail' />\r\n          Inbox\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          name='Sent'\r\n          active={path === PATH.SENT}\r\n          as={Link} to={PATH.SENT}\r\n        >\r\n        <Icon name='send' />\r\n          Sent\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          name='compose'\r\n          as={Link} to={PATH.COMPOSE}\r\n        >\r\n        <Icon name=\"pencil\"/>\r\n          Compose\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MessagesSubMenu;","import React from 'react';\r\nimport {Grid} from 'semantic-ui-react';\r\nimport MessagesSubMenu from './protected/MessagesSubMenu';\r\n\r\nconst AppGrid = ({children,path}) =>{\r\n\r\n    return (\r\n            <Grid stackable padded={true}>\r\n                <Grid.Row>\r\n                    <Grid.Column width={3}>\r\n                        <MessagesSubMenu path={path}/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={12}>\r\n                        {children}\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n    );\r\n}\r\n\r\nexport default AppGrid;","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {isAuth} from '../../actions';\r\nimport Unauthorized from '../public/Unauthorized';\r\nimport AppGrid from '../AppGrid';\r\n\r\nclass PrivateRoute extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.isAuth();\r\n    }\r\n\r\n    render(){\r\n        const {component:Component,auth,path,...rest} = this.props;\r\n        \r\n        return(\r\n            <Route {...rest} render={props=>{\r\n                if(!auth.isLoggedIn){\r\n                    return <Unauthorized/>\r\n                }\r\n                return (\r\n                        <AppGrid path={path}>\r\n                                    <Component {...props}/>\r\n                        </AppGrid>\r\n                )\r\n            }} />\r\n        )\r\n    }\r\n\r\n}\r\n    \r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {auth:state.auth}\r\n}\r\n\r\nexport default connect(mapStateToProps,{isAuth})(PrivateRoute);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment,Header,Button} from 'semantic-ui-react';\r\nimport {PATH} from '../../../helpers/Constants';\r\n\r\nconst MessageView = ({header,sent,reciver,subject,content}) => (\r\n    <Segment placeholder>\r\n        <Segment.Group>\r\n            <Segment textAlign='center'>\r\n                <Header>\r\n                    {header}\r\n                </Header>\r\n            </Segment>\r\n            <Segment.Group>\r\n                <Segment textAlign='center'>From: {sent}</Segment>\r\n                <Segment textAlign='center'>To: {reciver}</Segment>\r\n                <Segment textAlign='center'>Subject: {subject}</Segment>\r\n                <Segment textAlign='center'>Message content: {content}</Segment>\r\n            </Segment.Group>\r\n            <Segment>\r\n                <Button as={Link} to={PATH.INBOX}>Back To Inbox</Button>\r\n            </Segment>\r\n        </Segment.Group>\r\n    </Segment>\r\n  )\r\n  \r\n  export default MessageView;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchMessage,cleareFailedShowMessage} from '../../../actions'\r\nimport MessageView from './MessageView';\r\nimport CustomModal from '../../modal/Modal';\r\nimport {Button} from 'semantic-ui-react';\r\nimport {Link} from 'react-router-dom';\r\nimport ScreenLoader from '../../ScreenLoader';\r\nimport {PATH} from '../../../helpers/Constants';\r\n\r\nclass ShowMessage extends React.Component{\r\n\r\n    componentDidMount(){\r\n        const {match} = this.props;\r\n        this.props.fetchMessage(match.params.id)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const {failed_show_message} = this.props;\r\n        if(failed_show_message) this.props.cleareFailedShowMessage()\r\n    }\r\n\r\n    renderMessageView(){\r\n\r\n        const {message,mail,user,failed_show_message,match,screen_loader_active} = this.props;\r\n        if(screen_loader_active){\r\n            return null\r\n        }\r\n        if(failed_show_message){\r\n            return <CustomModal icon=\"thumbs down\" closeModalPath={PATH.INBOX} \r\n                                title={message.error} \r\n                                content=\"Ho no, it seems like you try to reach a message that you can't view\" \r\n                                actions={<Button as={Link} to={PATH.INBOX} color=\"blue\">Back to inbox</Button>}/>\r\n        }else{\r\n            if(message.sender === user.userId){\r\n                return <MessageView header={`Message ${match.params.id}`} sent={user.email} reciver={mail.email} subject={message.subject} content={message.message}/>\r\n           }else{\r\n               return <MessageView header={`Message ${match.params.id}`} sent={mail.email} reciver={user.email} subject={message.subject} content={message.message}/>\r\n           }\r\n        }   \r\n    }\r\n\r\n\r\n    render(){\r\n        const {screen_loader_active} = this.props;\r\n        return (\r\n            <>\r\n                <ScreenLoader active={screen_loader_active}/>\r\n                {this.renderMessageView()}  \r\n            </>\r\n        );\r\n    } \r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {message:state.messages.s_message,mail: state.messages.extra_s_message, user: state.auth,\r\n         failed_show_message: state.messages.failed_show_message,screen_loader_active:state.loader.screen_loader_active}\r\n}\r\n\r\nexport default connect(mapStateToProps,{fetchMessage,cleareFailedShowMessage})(ShowMessage);","import React from 'react'; \r\nimport CustomeModal from '../../modal/Modal';\r\nimport {fetchMessage,deleteMessage,cleareFailedShowMessage} from '../../../actions';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {Button} from 'semantic-ui-react';\r\nimport {PATH} from '../../../helpers/Constants';\r\n\r\nclass DeleteMessage extends React.Component{\r\n\r\n    componentDidMount(){\r\n        this.props.fetchMessage(this.props.match.params.id);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const {failed_show_message} = this.props;\r\n        if(failed_show_message) this.props.cleareFailedShowMessage();\r\n    }\r\n\r\n\r\n    renderActions(){\r\n        const {id} = this.props.match.params;\r\n        const {currentUserId,messageToDelete} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <Button onClick={()=>this.props.deleteMessage(id,currentUserId,messageToDelete.sender)} color=\"red\">Delete</Button>\r\n                <Button as={Link} to={currentUserId === messageToDelete.sender ? PATH.SENT : PATH.INBOX}>Cancel</Button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n\r\n    renderModal(){\r\n        const {currentUserId,messageToDelete,failed_show_message} = this.props;\r\n        if(failed_show_message){\r\n            return(\r\n                <CustomeModal\r\n                icon='thumbs down'\r\n                closeModalPath = {PATH.INBOX}\r\n                title={messageToDelete.error}\r\n                content=''\r\n                actions={<Button as={Link} to={PATH.INBOX} >Cancel</Button>}\r\n                />\r\n                )\r\n        }else{\r\n            return(\r\n                <CustomeModal\r\n                icon='archive'\r\n                closeModalPath = {currentUserId === messageToDelete.sender ? PATH.SENT : PATH.INBOX}\r\n                title=\"Delete Message\"\r\n                content={`Are you sure you want to delete the message: ${messageToDelete.subject}?`}\r\n                actions={this.renderActions()}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.renderModal()}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {messageToDelete: state.messages.s_message,currentUserId:state.auth.userId,\r\n        failed_show_message:state.messages.failed_show_message}\r\n}\r\n\r\nexport default connect(mapStateToProps,{fetchMessage,deleteMessage,cleareFailedShowMessage})(DeleteMessage);","import React from 'react';\r\nimport { Container} from 'semantic-ui-react';\r\nimport {Router,Route,Switch} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {PATH} from '../helpers/Constants';\r\nimport {serverErrorCleanUp} from '../actions';\r\nimport history from '../helpers/History';\r\n\r\nimport Header from './menu/Header';\r\nimport SignIn from './public/SignIn';\r\nimport SignUp from './public/SignUp';\r\nimport NoFound from './public/NoFound';\r\n\r\nimport InternalServerError from './InternalServerError';\r\nimport RecivedMessages from './protected/inbox/RecivedMessages';\r\nimport sentMessages from './protected/sent/sentMessages';\r\nimport Compose from './protected/create/Compose';\r\nimport PrivateRoute from './menu/PrivateRoute';\r\nimport ShowMessage from './protected/message/ShowMessage';\r\nimport DeleteMessage from './protected/delete/DeleteMessage';\r\n\r\nclass App extends React.Component{\r\n\r\n    cleanServerError = () =>{\r\n        this.props.serverErrorCleanUp()\r\n    }\r\n\r\n    render(){\r\n        const {serverError,serverErrorMessage} = this.props;\r\n        return (\r\n            <Container fluid>\r\n                <Router history={history}>\r\n                    <Header/>\r\n                    <Switch>\r\n                        <Route path={PATH.SIGN_IN} exact component={SignIn} />\r\n                        <Route path={PATH.SIGN_UP} exact component={SignUp} />\r\n                        <PrivateRoute exact path={PATH.INBOX} component={RecivedMessages}/>\r\n                        <PrivateRoute exact path={PATH.SENT} component={sentMessages}/>\r\n                        <PrivateRoute exact path={PATH.SHOW_MESSAGE} component={ShowMessage}/>\r\n                        <PrivateRoute exact path={PATH.DELETE_MESSAGE} component={DeleteMessage}/>\r\n                        <PrivateRoute path={PATH.COMPOSE} exact component={Compose} />\r\n                        <Route path=\"*\" component={NoFound} />\r\n                    </Switch>\r\n                {serverError && <InternalServerError dismiss={this.cleanServerError} serverErrorMessage={serverErrorMessage} />}\r\n                </Router>\r\n            </Container>\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {serverError:state.internalServerError.error, \r\n        serverErrorMessage:state.internalServerError.errorMessage}\r\n}\r\n\r\nexport default connect(mapStateToProps,{serverErrorCleanUp})(App);","import {\r\n    FAILED_SIGNIN,\r\n    SIGN_IN,\r\n    SIGN_OUT,\r\n    USER_LOADED,\r\n    CLEAR_ERROR,\r\n    FAILED_SIGNUP\r\n    } from '../actions/types';\r\n\r\nconst INITIAL_STATE={\r\n    isLoggedIn:false,\r\n    userId:null,\r\n    email:null,\r\n    full_name:null,\r\n    isLoading:false,\r\n    failed_signin_error:null,\r\n    failed_signup_error:null\r\n}\r\n\r\nexport default (state = INITIAL_STATE,action)=>{\r\n    switch(action.type){\r\n        case SIGN_IN:\r\n            return {...state,isLoggedIn:action.payload.isLoggedIn, userId:action.payload.id,email:action.payload.email,full_name:action.payload.full_name}\r\n            \r\n        case SIGN_OUT:\r\n            return {...state,...INITIAL_STATE};\r\n\r\n        case USER_LOADED:\r\n            return {...state,isLoggedIn:action.payload.isLoggedIn, userId:action.payload.id,email:action.payload.email,full_name:action.payload.full_name,isLoading:action.payload.isLoading}\r\n\r\n        case FAILED_SIGNIN:\r\n            return {...state,failed_signin_error:action.payload}\r\n            \r\n        case FAILED_SIGNUP:\r\n            return {...state,failed_signup_error:action.payload}\r\n            \r\n        case CLEAR_ERROR:\r\n            return {...state,failed_signin_error:null,failed_signup_error:null }\r\n        default:\r\n            return state;\r\n    }\r\n}","import _ from 'lodash';\r\nimport {\r\n    FETCH_RECIVEMESSAGES,\r\n    FETCH_SENTMESSAGES,\r\n    FETCH_MESSAGE,\r\n    FETCH_USERS,\r\n    CREATE_MESSAGE,\r\n    DELETE_MESSAGE,\r\n    SIGN_OUT,\r\n    EMPTY_MESSAGES,\r\n    CLEAR_EMPTY,\r\n    FAILEDSHOW_MESSAGE,\r\n    CLEAR_FAILEDSHOW_MESSAGE\r\n    } from '../actions/types';\r\n\r\nconst INITIAL_STATE={\r\n    recived:{},\r\n    sent:{},\r\n    s_message:{},\r\n    extra_s_message:{},\r\n    users:{},\r\n    empty_messages:false,\r\n    failed_show_message:false\r\n}\r\n\r\nexport default (state=INITIAL_STATE,action) =>{\r\n    switch (action.type){\r\n        case FETCH_RECIVEMESSAGES:\r\n            return {...state , recived:_.mapKeys(action.payload,'id'),empty_messages:false};\r\n\r\n        case FETCH_SENTMESSAGES:\r\n            return {...state , sent:_.mapKeys(action.payload,'id'),empty_messages:false};\r\n\r\n        case FETCH_MESSAGE :\r\n            return {...state, s_message:action.payload.message,extra_s_message:action.payload.messageUserData,failed_show_message:false};\r\n\r\n        case FAILEDSHOW_MESSAGE:\r\n            return {...state, failed_show_message:true,s_message:action.payload};\r\n\r\n        case CLEAR_FAILEDSHOW_MESSAGE:\r\n            return {...state, failed_show_message:false,s_message:{},extra_s_message:{}};\r\n\r\n        case FETCH_USERS :\r\n            return {...state,users:_.mapKeys(action.payload,'id')};\r\n\r\n        case CREATE_MESSAGE:\r\n            return {...state,sent:{[action.payload.id]:action.payload}};\r\n\r\n        case DELETE_MESSAGE:\r\n            return {...state,s_message:{},extra_s_message:{}};\r\n\r\n        case SIGN_OUT:\r\n            return {...state, ...INITIAL_STATE};\r\n\r\n        case EMPTY_MESSAGES:\r\n            return {...state,empty_messages:true};\r\n\r\n        case CLEAR_EMPTY:\r\n            return {...state, empty_messages:false};\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    ACTIVE_SCREENLOADER,\r\n    DISABLE_SCREENLOADER,\r\n    } from '../actions/types';\r\n\r\nconst INITIAL_STATE={\r\n    screen_loader_active:false\r\n}\r\n\r\nexport default (state=INITIAL_STATE,action) =>{\r\n    switch (action.type){\r\n        case ACTIVE_SCREENLOADER:\r\n            return {...state , screen_loader_active:true};\r\n\r\n        case DISABLE_SCREENLOADER:\r\n            return {...state , ...INITIAL_STATE};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    SERVER_ERROR_SHOW,\r\n    SERVER_ERROR_CLEAN,\r\n    } from '../actions/types';\r\n\r\nconst INITIAL_STATE={\r\n    error: null,\r\n    errorMessage:''\r\n}\r\n\r\nexport default (state=INITIAL_STATE,action) =>{\r\n    switch (action.type){\r\n        case SERVER_ERROR_SHOW:\r\n            return {...state , error: true, errorMessage:action.payload};\r\n\r\n        case SERVER_ERROR_CLEAN:\r\n            return {...state , ...INITIAL_STATE};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport authReducer from './authReducer';\r\nimport messagesReducer from './messagesReducer';\r\nimport loaderReducer from './loaderReducer';\r\nimport serverErrorReducer from './serverErrorReducer';\r\n\r\nexport default combineReducers({\r\n    auth:authReducer,\r\n    form:formReducer,\r\n    messages:messagesReducer,\r\n    loader:loaderReducer,\r\n    internalServerError:serverErrorReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore,applyMiddleware,compose} from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n,document.querySelector('#root'));"],"sourceRoot":""}